# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Deploy

on:
  push:
    branches: [ "main", "local-node" ]

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
    - uses: pnpm/action-setup@v2
      name: Install pnpm
      with:
        version: 8
        run_install: false

    # Cache pnpm, from https://github.com/marketplace/actions/setup-pnpm#use-cache-to-reduce-installation-time
    - name: Get pnpm store directory
      id: pnpm-cache
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

    - uses: actions/cache@v3
      name: Setup pnpm cache
      with:
        path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
        key: ${{ runner.os }}-pnpmstore-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: ${{ runner.os }}-pnpmstore-
    # End cache pnpm

    - name: Install dependencies
      run: pnpm install
    - name: Build
      run: pnpm build ; ls -al
      
    - name: Send to server
      uses: easingthemes/ssh-deploy@main
      with:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        ARGS: -rgoDzvc --copy-links --delete -i
        SOURCE: "dist/"
        REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
        REMOTE_USER: ${{ secrets.REMOTE_USER }}
        TARGET: ${{ secrets.REMOTE_TARGET }}
        SCRIPT_BEFORE: |
          pm2 ls
          ls -al
        SCRIPT_AFTER: |
          pnpm install;
          pm2 ls | grep redirected | grep online \
            &&  pm2 reload redirected \
            || NODE_ENV=production pm2 start ./dist/index.js -i 3 --name redirected --time -o $HOME/.pm2/logs/redirected-logs.log -e $HOME/.pm2/logs/redirected-logs.log ;
          pm2 save
          pm2 ls
